use std::collections::HashMap;

use once_cell::sync::OnceCell;
use scraper_dep::Selector;


static SELECTORS_MAP: OnceCell<HashMap<String, Selector>> = OnceCell::new();

pub fn get(k: &str) -> &'static Selector {
    SELECTORS_MAP.get_or_init(|| {
        HashMap::from([
			(
				"a".into(),
				Selector::parse(
					"a[href]"
				).unwrap()
			),
			(
				"span".into(),
				Selector::parse(
					"span"
				).unwrap()
			),
			(
				"img".into(),
				Selector::parse(
					"img[src]"
				).unwrap()
			),
			(
				"noframes".into(),
				Selector::parse(
					"noframes"
				).unwrap()
			),


			(
				"ym/product_title".into(),
				Selector::parse(
					r#"h1[data-auto="productCardTitle"]"#
				).unwrap()
			),
			(
				"ym/card_content".into(),
				Selector::parse(
					"#cardContent"
				).unwrap()
			),
			(
				"ym/price_data".into(),
				Selector::parse(
					r#"div[data-baobab-name="productSnippet"]"#
				).unwrap()
			),
			(
				"ym/shop_item".into(),
				Selector::parse(
					r#"div[data-baobab-name="shopItem"]"#
				).unwrap()
			),
			(
				"ym/image_gallery".into(),
				Selector::parse(
					r#"div[data-auto="image-gallery-nav-item"]"#
				).unwrap()
			),
			(
				"ym/product_rating".into(),
				Selector::parse(
					r#"div[data-apiary-widget-name="@card/Rating"]"#
				).unwrap()
			),
			(
				"ym/product_vendor".into(),
				Selector::parse(
					r#"div[data-zone-name="AllVendorProductsLink"]"#
				).unwrap()
			),
			(
				"mm/main".into(),
				Selector::parse(
					r#"main[class="app__main"]"#
				).unwrap()
			),
			(
				"mm/product_title".into(),
				Selector::parse(
					r#"h1[itemprop="name"]"#
				).unwrap()
			),
			(
				"mm/price_block".into(),
				Selector::parse(
					r#"meta[itemprop="price"]"#
				).unwrap()
			),
			(
				"mm/bonus_amount".into(),
				Selector::parse(
					r#"span[data-test="bonus-amount"]"#
				).unwrap()
			),
			(
				"mm/seller".into(),
				Selector::parse(
					r#"span[class="pdp-merchant-rating-block__merchant-name"]"#
				).unwrap()
			),
			(
				"mm/img".into(),
				Selector::parse(
					"img.inner-image-zoom_image"
				).unwrap()
			),
			(
				"mm/rating".into(),
				Selector::parse(
					r#"span[class="reviews-rating__reviews-rating-count"]"#
				).unwrap()
			),
			(
				"mm/reviews".into(),
				Selector::parse(
					r#"span[class="reviews-rating__reviews-count"]"#
				).unwrap()
			),
			(
				"mm/categories".into(),
				Selector::parse(
					r#"span[class="categories__category-item_title"]"#
				).unwrap()
			),
			(
				"oz/data".into(),
				Selector::parse(
					"body > pre"
				).unwrap()
			),
		])
    }).get(k)
	.unwrap()
}
